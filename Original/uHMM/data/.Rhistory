# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
source(repertoireSource+"")
"salut"+"test"
c("salut","test")
source(fichier[1])
source(fichier[2])
uHMMinterface()
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
.logoFrame <- function(window){};
uHHMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
.logoFrame <- function(window){};
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
.firstTab(mainWindow,tm,"en",uHMMenv,leftMargin=30,hscaleGraphicFrame=1.2,vscaleGraphicFrame=1.2)
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
uHMM::uHMMinterface()
uHMM::.logoFrame
uHMM::.logoFrame()
library(uHMM)
library(uHMM)
uHMM::uHMMinterface()
.logoFrame()
path.package(uHMM)
path.package("uHMM")
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
path.package("uHMM")
View(win1)
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\\Pierre\\Documents\\SharedR\\uHMM2\\R";
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
path.package("UHMM")
path.package("UHMM") <- "C:\\Users\\Pierre\\Documents\\SharedR\\uHMM2\\R"
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
if(is.null(repertoireSource))
{
repertoireSource <- path.package("uHMM");
}
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\uHMM2\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
library(uHMM);
# Charger les bibliotheques
paquets=c("tcltk","tcltk2","tkrplot", "HMM", "clValid", "class", "cluster","FactoMineR", "corrplot", "chron");
for(paquet in paquets)
{
library(paquet,character.only = T);
}
# Charger les fichiers R
repertoireSource="C:\\Users\\Pierre\\Documents\\SharedR\\interfaceIfremer\\uHMM\\R";
fichiers = list.files(path=repertoireSource,pattern=".r",full.names = T);
for(fichier in fichiers)
{
source(fichier);
}
uHMMinterface()
uHMMinterface()
plot(cars)
plot(cars)
print("Coucou Romain")
source("chargerLeProjetSansCompilation.r")
uHMMinterface()
btn1.fun = fucntion(){print("Hello World")}
btn1.fun <- fucntion(){print("Hello World");}
btn1.fun <- fucntion(){print("Hello World");}
btn1.fun <- fucntion(){
print("Hello World")
}
btn1.fun <- fucntion() {
print("Hello World")
}
btn1.fun <- fucntion() { print("Hello World") }
print("Hello World")
btn1.fun <- function(a) { return(a)}
btn1.fun <- function{print("Hello World")}
btn1.fun <- function() { print("Hello World") }
library(tcltk)
btn1 <- tkbutton(text="test")
btn1 <- tkbutton(null,text="test")
btn1 <- tkbutton(0,text="test")
btn1 <- "Salut"
btn1.fun
btn1 <- List()
library(tcltk)
library(tcltk2)
maFenetre <- tktoplevel()
tktitle(maFenetre)<-"Ma Fentre a moi"
maFenetre$btn1 <- tkbutton(maFenetre)
maFenetre$btn1.fun <- function(){ maFenetre$var <- "Bouton 1" }
maFenetre$btn2 <- tkbutton(maFenetre)
maFenetre$btn2.fun <- function(){ maFenetre$var <- "Bouton 2" }
maFenetre$label <- tklabel(maFenetre)
maFenetre$var <- TclVar("Texte par default")
maFenetre$var <- tclVar("Texte par default")
tkconfigure(maFenetre$btn1,command=maFenetre$btn1.fun)
tkconfigure(maFenetre$btn2,command=maFenetre$btn2.fun)
tkconfigure(maFenetre$label,textvar=maFenetre$var)
tkadd(maFenetre$label)
tkpack(maFentre$label)
tkpack(maFenetre$label)
tkpack(maFenetre$btn1)
tkpack(maFenetre$btn2)
tkconfigure(maFenetre$btn1,text="Bouton 1")
tkconfigure(maFenetre$btn2,text="Bouton 2")
maFenetre$btn2.fun <- function(){ maFenetre$var <- tclValue("Bouton 2") }
maFenetre$var <- TclVar("Texte par default")
maFenetre$var <- tclVar("Texte par default")
maFenetre$btn1.fun <- function(){ maFenetre$var <- tclValue("Bouton 1") }
tkconfigure(maFenetre$btn1, command=maFenetre$btn1.fun)
tkconfigure(maFenetre$btn2, command=maFenetre$btn2.fun)
maFenetre$btn1.fun <- function(){ maFenetre$var <- tclvalue("Bouton 1") }
maFenetre$btn2.fun <- function(){ maFenetre$var <- tclvalue("Bouton 2") }
tkconfigure(maFenetre$btn2, command=maFenetre$btn2.fun)
tkconfigure(maFenetre$btn1, command=maFenetre$btn1.fun)
tkdestroy(maFenetre)
maFentre$textVariable <- tclvar()
maFentre$textVariable <- tclVar()
maFenetre <- tktoplevel()
maFentre$textVariable <- tclVar()
maFenetre$textVariable <- tclVar()
maFenetre <- tktoplevel()
maFenetre$textVariable <- tclVar("Texte par defaul")
maFenetre$btn1 <- tkbutton(maFenetre)
maFenetre$btn2 <- tkbutton(maFenetre)
maFenetre$lbl <- tklabel(maFenetre)
maFenetre$btn1.fun <- function(){
tclvalue(maFenetre$textVariable) <- "Bouton 1"
}
maFenetre$btn2.fun <- function(){
tclValue(maFenetre$textVariable) <- "Bouton 2"
}
tktitle(maFenetre)<-"Ma fenetre"
tkconfigure(maFenetre$btn1,text="Bouton 1", command=maFenetre$btn1.fun)
tkconfigure(maFenetre$btn2,text="Bouton 2", command=maFenetre$btn2.fun)
tkconfigure(maFenetre$lbl,textvariable=maFenetre$textVariable)
tkpack(maFenetre$lbl)
tkpack(maFenetre$btn1)
tkpack(maFenetre$btn2)
maFenetre <- tktoplevel()
maFenetre$textVariable <- tclVar("Texte par defaul")
maFenetre$btn1 <- tkbutton(maFenetre)
maFenetre$lbl <- tklabel(maFenetre)
maFenetre$btn1.fun <- function(){
tclvalue(maFenetre$textVariable) <- "Bouton 1"
}
maFenetre$btn2 <- tkbutton(maFenetre)
maFenetre$btn2.fun <- function(){
tclvalue(maFenetre$textVariable) <- "Bouton 2"
}
tktitle(maFenetre)<-"Ma fenetre"
tkconfigure(maFenetre$btn1,text="Bouton 1", command=maFenetre$btn1.fun)
tkconfigure(maFenetre$btn2,text="Bouton 2", command=maFenetre$btn2.fun)
tkconfigure(maFenetre$lbl,textvariable=maFenetre$textVariable)
tkpack(maFenetre$lbl)
tkpack(maFenetre$btn1)
tkpack(maFenetre$btn2)
install.packages(rpart.plot)
install.packages("rpart.plot")
library(uHMM)
uHMMinterface()
t
t()
?t
source('~/SharedR/updateByPierre/Start_Session.r', echo=TRUE)
source('~/SharedR/updateByPierre/Start_Session.r', echo=TRUE)
getwd()
x = 1:20
y = x*x
par(nfrows=c(2,1))
plot(x,y)
plot(y,x)
?par
x = 1:20
y = x*x
par(mfrows=c(2,1))
plot(x,y)
plot(y,x)
x = 1:20
y = x*x
par(mfrow=c(2,1))
plot(x,y)
plot(y,x)
plot(cars)
plot(cars)
x = 1:10
par(mfrowc(3,2))
x = 1:10
par(mfrow=c(3,2))
plot(x,x)
hist(x,x*x)
boxplot(x,x*x*x)
barplot(x,x*x*x*x)
pie(x,x*x*x*x*x)
plot(x,x^6)
x = 1:10
par(mfrow=c(3,2))
plot(x,x)
hist(x,x*x)
boxplot(x,x*x*x)
barplot(x,x*x*x*x)
pie(x,x*x*x*x*x)
plot(x,x^6)
par(mfrow=c(1,2))
plot(x,x^2,main ="La fonction carré",sub= "f(x)=x^2",xlab = "x", ylab="f(x)")
plot(x,x^3,main ="La fonction cube",sub= "f(x)=x^3",xlab = "x", ylab="f(x)")
plot(x,-x,"r")
plot(x,-x,col="r")
plot(x,-x,col="red")
point(x,x^2,col="blue")
point(x,x^2,col="bleu")
points(x,x^2,col="blue")
points(x,x^2)
?points
points(x,x^2,type="p",col="blue")
plot(x,-x,col="red")
points(x,x^2,type="p",col="blue")
points(x,x^2,type="p",col="blue")
points(x,x^2,type="p",col="blue")
points(x^2,type="p",col="blue")
points(x^2,type="p",col="blue")
;
points(x,x^2,col="blue")
plot(x,-x,col="red")
plot(x,-x,col="red")
points(x,x^2,col="blue")
points(x,x^2,col="blue")
points(x,x^2,col="blue")
points(x,x^2,col="y")
points(x,x^2,col="yellow")
points(x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^2,col="orange")
points(-x,x^3,col="orange")
points(-x,x^3,col="orange")
points(x[1:10],x[1:10]^2,col="blue")
plot(x,-x,col="red")
points(x[1:10],x[1:10]^2,col="blue")
points(-x,x^3,col="")
points(-x,x^3,col="")
lines(x[1:10],x[1:10]^2,col="blue")
plot(x,-x,col="red")
lines(x[1:10],x[1:10]^2,col="blue")
lines(x,x,col="blue")
plot(x,-x,col="red")
lines(x,x,col="blue")
points(x=x,y=x,col="red",pch=3)
plot(x,-x,col="red")
points(x=x,y=x,col="red",pch=3)
plot(x,-x,col="red")
points(x=x,y=x,col="red",pch=3)
plot(x,-x,col="red",xlim = c(0,10),c(-10,10))
plot(x,-x,col="red",xlim = c(0,10),ylim=c(-10,10))
plot(x,-x,col="red",xlim = c(0,10),ylim=c(-10,10))
points(x=x,y=x,col="red",pch=3)
x = 1:10
par(mfrow=c(3,2))
plot(x,x)
hist(x,x*x)
boxplot(x,x*x*x)
barplot(x,x*x*x*x)
pie(x,x*x*x*x*x)
plot(x,x^6)
par(mfrow=c(1,2))
plot(x,x^2,main ="La fonction carré",sub= "f(x)=x^2",xlab = "x", ylab="f(x)")
plot(x,x^3,main ="La fonction cube",sub= "f(x)=x^3",xlab = "x", ylab="f(x)")
plot(x,-x,col="red",xlim = c(0,10),ylim=c(-10,10))
points(x=x,y=x,col="red",pch=3)
getwd()
setwd("SharedR/uHMM/data/")
load(file = "MarelCarnot.rda")
MarelCarnot
plot(MarelCarnot$Dates,MarelCarnot$E_LU1)
